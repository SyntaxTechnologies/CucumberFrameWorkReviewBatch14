************Cucumber Review 02**************

Pages:
all the webElements that are there on the application under test
we add them in the package called pages
inside this package we can create different classes for each page under test
each class would hvae webElements located on that particular page



utils:
everything that u need to utilize in writing down your test scenarios can be  included here
utils usually contians:

 commonMethods:open browser, close brwoser, send keys, take screenshot
 constants: the things that will not be changing like file paths, waits value, URLS
 cofnigReader:function to read the configuration file
 ExcelReader:function to read the data from excel


 Runners:
  a class that use Junit to execute your feature files in cucumber.
  can we run a feature file without a runner , yes we can
  the main advantage is to have batch execution.



steps:
 login step : implements the feature file login.feature
 basically the actual code is here to test all the sceanrios

 hooks: we define post and pre condition here

page intializers: a class where we initalize the object of the pages that we have created under the package Pages


resource:
all non java things can be placed here
like
1.feature files  --> gherkin scenarios
2.excel file   --> to have a huge amount of test data
3.test data    -->any test data that u may have
4.configuration file -->url, username and password



-----------------------------------------------------------------------------------------------------------
complete this using cucumber framework
make sure your framework is cusomizeable
Task1:
1.For the hrms application navigate to the Login page
2.Make sure that when ever user enters correct credentials he is able to login
3. He sees the welcome message



Step1:
1.open the browser--->implemetation in commonMethods and call the function in hooks.
2.go to the url--> navigate to the url in the implementation of openBrwoser() becuase that is constant. in order to save time i can put the url in config file so that in future if it ever changes i can simply chnage it from there.

3.get the elements---> in the package pages , create a loginPage class and have all the Webelements on it , so that in future u can reuse them
 we know that we will hvae to create object in the main for each page  from which we want to call a particular element
 in order to reduce this effort , we can hvae a separate class called "page initalizers" and there we cna intialize all the page objects.
 QUestion ?

when to intialize all the pages --> after opening the browser


4.send the keys
5.press login
6.verify that you can see login message
7.close browser


